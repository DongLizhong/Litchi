<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.litchi.litchidataserver.mapper.PictureMapper" >
  <resultMap id="BaseResultMap" type="cn.litchi.model.entity.Picture" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="n_id" property="nId" jdbcType="BIGINT" />
    <result column="m_id" property="mId" jdbcType="BIGINT" />
    <result column="h_id" property="hId" jdbcType="BIGINT" />
    <result column="l_id" property="lId" jdbcType="BIGINT" />
    <result column="time" property="time" jdbcType="TIMESTAMP" />
    <result column="volt" property="volt" jdbcType="VARCHAR" />
    <result column="pic" property="pic" jdbcType="VARCHAR" />
    <result column="num" property="num" jdbcType="INTEGER" />
    <result column="young_num" property="youngNum" jdbcType="INTEGER" />
    <result column="immature_num" property="immatureNum" jdbcType="INTEGER" />
    <result column="mature_num" property="matureNum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, n_id, m_id, h_id, l_id, time, volt, pic, num, young_num, immature_num, mature_num
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.litchi.model.entity.PictureExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from picture
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from picture
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from picture
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.litchi.model.entity.PictureExample" >
    delete from picture
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.litchi.model.entity.Picture" >
    insert into picture (id, n_id, m_id, h_id, 
      l_id, time, volt, pic, 
      num, young_num, immature_num, 
      mature_num)
    values (#{id,jdbcType=BIGINT}, #{nId,jdbcType=BIGINT}, #{mId,jdbcType=BIGINT}, #{hId,jdbcType=BIGINT}, 
      #{lId,jdbcType=BIGINT}, #{time,jdbcType=TIMESTAMP}, #{volt,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, 
      #{num,jdbcType=INTEGER}, #{youngNum,jdbcType=INTEGER}, #{immatureNum,jdbcType=INTEGER}, 
      #{matureNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.litchi.model.entity.Picture" >
    insert into picture
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="nId != null" >
        n_id,
      </if>
      <if test="mId != null" >
        m_id,
      </if>
      <if test="hId != null" >
        h_id,
      </if>
      <if test="lId != null" >
        l_id,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="volt != null" >
        volt,
      </if>
      <if test="pic != null" >
        pic,
      </if>
      <if test="num != null" >
        num,
      </if>
      <if test="youngNum != null" >
        young_num,
      </if>
      <if test="immatureNum != null" >
        immature_num,
      </if>
      <if test="matureNum != null" >
        mature_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="nId != null" >
        #{nId,jdbcType=BIGINT},
      </if>
      <if test="mId != null" >
        #{mId,jdbcType=BIGINT},
      </if>
      <if test="hId != null" >
        #{hId,jdbcType=BIGINT},
      </if>
      <if test="lId != null" >
        #{lId,jdbcType=BIGINT},
      </if>
      <if test="time != null" >
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="volt != null" >
        #{volt,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        #{num,jdbcType=INTEGER},
      </if>
      <if test="youngNum != null" >
        #{youngNum,jdbcType=INTEGER},
      </if>
      <if test="immatureNum != null" >
        #{immatureNum,jdbcType=INTEGER},
      </if>
      <if test="matureNum != null" >
        #{matureNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.litchi.model.entity.PictureExample" resultType="java.lang.Integer" >
    select count(*) from picture
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update picture
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.nId != null" >
        n_id = #{record.nId,jdbcType=BIGINT},
      </if>
      <if test="record.mId != null" >
        m_id = #{record.mId,jdbcType=BIGINT},
      </if>
      <if test="record.hId != null" >
        h_id = #{record.hId,jdbcType=BIGINT},
      </if>
      <if test="record.lId != null" >
        l_id = #{record.lId,jdbcType=BIGINT},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.volt != null" >
        volt = #{record.volt,jdbcType=VARCHAR},
      </if>
      <if test="record.pic != null" >
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null" >
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.youngNum != null" >
        young_num = #{record.youngNum,jdbcType=INTEGER},
      </if>
      <if test="record.immatureNum != null" >
        immature_num = #{record.immatureNum,jdbcType=INTEGER},
      </if>
      <if test="record.matureNum != null" >
        mature_num = #{record.matureNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update picture
    set id = #{record.id,jdbcType=BIGINT},
      n_id = #{record.nId,jdbcType=BIGINT},
      m_id = #{record.mId,jdbcType=BIGINT},
      h_id = #{record.hId,jdbcType=BIGINT},
      l_id = #{record.lId,jdbcType=BIGINT},
      time = #{record.time,jdbcType=TIMESTAMP},
      volt = #{record.volt,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      young_num = #{record.youngNum,jdbcType=INTEGER},
      immature_num = #{record.immatureNum,jdbcType=INTEGER},
      mature_num = #{record.matureNum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.litchi.model.entity.Picture" >
    update picture
    <set >
      <if test="nId != null" >
        n_id = #{nId,jdbcType=BIGINT},
      </if>
      <if test="mId != null" >
        m_id = #{mId,jdbcType=BIGINT},
      </if>
      <if test="hId != null" >
        h_id = #{hId,jdbcType=BIGINT},
      </if>
      <if test="lId != null" >
        l_id = #{lId,jdbcType=BIGINT},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="volt != null" >
        volt = #{volt,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="num != null" >
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="youngNum != null" >
        young_num = #{youngNum,jdbcType=INTEGER},
      </if>
      <if test="immatureNum != null" >
        immature_num = #{immatureNum,jdbcType=INTEGER},
      </if>
      <if test="matureNum != null" >
        mature_num = #{matureNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.litchi.model.entity.Picture" >
    update picture
    set n_id = #{nId,jdbcType=BIGINT},
      m_id = #{mId,jdbcType=BIGINT},
      h_id = #{hId,jdbcType=BIGINT},
      l_id = #{lId,jdbcType=BIGINT},
      time = #{time,jdbcType=TIMESTAMP},
      volt = #{volt,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      young_num = #{youngNum,jdbcType=INTEGER},
      immature_num = #{immatureNum,jdbcType=INTEGER},
      mature_num = #{matureNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>